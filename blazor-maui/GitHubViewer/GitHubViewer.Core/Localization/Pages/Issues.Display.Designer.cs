//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GitHubViewer.Localization.Pages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Issues_Display {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Issues_Display() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GitHubViewer.Localization.Pages.Issues.Display", typeof(Issues_Display).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum issues shown in a page. Default is 20..
        /// </summary>
        public static string IssuesPerPage_Description {
            get {
                return ResourceManager.GetString("IssuesPerPage.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issues per page.
        /// </summary>
        public static string IssuesPerPage_Name {
            get {
                return ResourceManager.GetString("IssuesPerPage.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target repository name with &quot;{owner}/{repository}&quot; format to be searched..
        /// </summary>
        public static string Repository_Description {
            get {
                return ResourceManager.GetString("Repository.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository (optional).
        /// </summary>
        public static string Repository_Name {
            get {
                return ResourceManager.GetString("Repository.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify oldest date and time of issues to be shown..
        /// </summary>
        public static string Since_Description {
            get {
                return ResourceManager.GetString("Since.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since (optional).
        /// </summary>
        public static string Since_Name {
            get {
                return ResourceManager.GetString("Since.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select direction of issues list which ordered by sort key. Default is &quot;Descsending&quot;..
        /// </summary>
        public static string SortDirection_Description {
            get {
                return ResourceManager.GetString("SortDirection.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List direction.
        /// </summary>
        public static string SortDirection_Name {
            get {
                return ResourceManager.GetString("SortDirection.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select sort key of issues. Default is &quot;Created date/time&quot;..
        /// </summary>
        public static string SortProperty_Description {
            get {
                return ResourceManager.GetString("SortProperty.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort key.
        /// </summary>
        public static string SortProperty_Name {
            get {
                return ResourceManager.GetString("SortProperty.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select issue state to be shown. Default is &quot;Open&quot;..
        /// </summary>
        public static string State_Description {
            get {
                return ResourceManager.GetString("State.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue state.
        /// </summary>
        public static string State_Name {
            get {
                return ResourceManager.GetString("State.Name", resourceCulture);
            }
        }
    }
}
